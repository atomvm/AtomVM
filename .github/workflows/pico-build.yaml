#
#  Copyright 2022 Paul Guyot <pguyot@kallisys.net>
#
#  SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later
#

name: Pico Build

on:
  push:
    paths:
      - '.github/workflows/pico-build.yaml'
      - 'CMakeLists.txt'
      - 'libs/**'
      - 'src/platforms/rp2040/**'
      - 'src/libAtomVM/**'
  pull_request:
    paths:
      - '.github/workflows/pico-build.yaml'
      - 'CMakeLists.txt'
      - 'libs/**'
      - 'src/platforms/rp2040/**'
      - 'src/libAtomVM/**'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref != 'refs/heads/master' && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  pico:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: ["pico", "pico_w"]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: "Install deps"
      run: sudo apt install -y cmake gperf ninja-build gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib

    - uses: erlef/setup-beam@v1
      with:
        otp-version: "24"
        elixir-version: "1.14"

    - name: "Build rebar3"
      run: |
        cd /tmp
        git clone https://github.com/erlang/rebar3.git
        cd rebar3
        ./bootstrap

    - name: Build
      shell: bash
      working-directory: ./src/platforms/rp2040/
      run: |
        set -euo pipefail
        export PATH=/tmp/rebar3:$PATH
        mkdir build
        cd build
        cmake .. -G Ninja -DPICO_BOARD=${{ matrix.board }}
        ninja

    - name: Install nvm and nodejs 20
      run: |
        set -euo pipefail
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
        source $HOME/.nvm/nvm.sh
        nvm install 20

    - name: Build tests (without SMP)
      shell: bash
      working-directory: ./src/platforms/rp2040/
      run: |
        set -euo pipefail
        export PATH=/tmp/rebar3:$PATH
        mkdir build.nosmp
        cd build.nosmp
        # TODO: fix all warnings and enable -DAVM_WARNINGS_ARE_ERRORS=ON
        cmake .. -G Ninja -DPICO_BOARD=${{ matrix.board }} -DAVM_DISABLE_SMP=1
        cmake --build . --target=rp2040_tests

    - name: Run tests with rp2040js
      shell: bash
      working-directory: ./src/platforms/rp2040/tests
      run: |
        set -euo pipefail
        source $HOME/.nvm/nvm.sh
        nvm use node
        npm install
        npx tsx run-tests.ts ../build.nosmp/tests/rp2040_tests.uf2 ../build.nosmp/tests/test_erl_sources/rp2040_test_modules.uf2

    - name: Build atomvmlib.uf2
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        export PATH=/tmp/rebar3:$PATH
        set -euo pipefail
        mkdir build
        cd build
        cmake ..
        make atomvmlib.uf2

    - name: Rename and write sha256sum
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        pushd src/platforms/rp2040/build
        ATOMVM_UF2=AtomVM-${{ matrix.board }}-${{ github.ref_name }}.uf2
        mv src/AtomVM.uf2 "src/${ATOMVM_UF2}"
        sha256sum "src/${ATOMVM_UF2}" > "src/${ATOMVM_UF2}.sha256"
        popd
        pushd build/libs
        ATOMVMLIB_FILE=atomvmlib-${{ github.ref_name }}.uf2
        mv atomvmlib.uf2 "${ATOMVMLIB_FILE}"
        sha256sum "${ATOMVMLIB_FILE}" > "${ATOMVMLIB_FILE}.sha256"
        popd

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        fail_on_unmatched_files: true
        files: |
          src/platforms/rp2040/build/src/AtomVM-${{ matrix.board }}-${{ github.ref_name }}.uf2
          src/platforms/rp2040/build/src/AtomVM-${{ matrix.board }}-${{ github.ref_name }}.uf2.sha256
          build/libs/atomvmlib-${{ github.ref_name }}.uf2
          build/libs/atomvmlib-${{ github.ref_name }}.uf2.sha256

#
#  Copyright 2017-2022 Davide Bettio <davide@uninstall.it>
#
#  SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later
#

name: Build and Test on macOS

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: "macos-11"

    steps:
    # Setup
    - name: "Checkout repo"
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: "Install deps"
      run: brew install cmake gperf doxygen erlang@21

    # Builder info
    - name: "System info"
      run: |
        echo "**uname:**"
        uname -a
        echo "**C Compiler version:**"
        clang --version
        clang++ --version
        echo "**CMake version:**"
        cmake --version

    # Build
    - name: "Build: create build dir"
      run: mkdir build

    # TODO: remove this workaround as soon as the issue is fixed.
    - name: "Apply workarounds"
      run: |
        sed -i'.orig1' -e 's/{"test_map.beam", 0},//g' tests/test.c
        sed -i'.orig2' -e 's/{"test_base64.beam", 0},//g' tests/test.c

    - name: "Build: run cmake"
      working-directory: build
      run: |
        export PATH="/usr/local/opt/erlang@21/bin:$PATH"
        cmake ${{ matrix.cmake_opts }} ..

    - name: "Build: run make"
      working-directory: build
      run: |
        export PATH="/usr/local/opt/erlang@21/bin:$PATH"
        make

    # Test
    - name: "Test: test-erlang"
      working-directory: build
      run: |
        ./tests/test-erlang

    - name: "Test: test-structs"
      working-directory: build
      run: |
        ./tests/test-structs

    - name: "Test: test_estdlib.avm"
      working-directory: build
      run: |
        ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm

    - name: "Test: test_eavmlib.avm"
      working-directory: build
      run: |
        ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm

    - name: "Test: test_alisp.avm"
      working-directory: build
      run: |
        ./src/AtomVM ./tests/libs/alisp/test_alisp.avm
